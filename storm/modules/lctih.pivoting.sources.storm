init {
    $utils = $lib.import(lctih.utils)
}

// TODO: Eventually, migrate some sources to the respective APIs

function getGoogleSources(node) {
    if ($utils.is_in_list($node.form(), ('inet:fqdn', 'inet:ipv4'))) {
        $lib.print("https://www.google.com/search?q=site:{value}", value=$utils.get_value_or_repr($node))
    }

    $lib.print('https://www.google.com/search?q="{value}"', value=$utils.get_value_or_repr($node)) | spin

    return($lib.null)
}

function getDuckDuckGoSources(node) {
    if ($utils.is_in_list($node.form(), ('inet:fqdn', 'inet:ipv4'))) {
        $lib.print("https://duckduckgo.com/?q=site:{value}", value=$utils.get_value_or_repr($node))
    }

    $lib.print('https://duckduckgo.com/?q="{value}"', value=$utils.get_value_or_repr($node)) | spin

    return($lib.null)
}

function getAlienaultSources(node) {
    $lib.print("https://otx.alienvault.com/browse/global/pulses?q={value}", value=$utils.get_value_or_repr($node)) | spin
    return($lib.null)
}

function getVirusTotalSources(node) {
    $lib.print("https://www.virustotal.com/gui/search/{value}", value=$utils.get_value_or_repr($node)) | spin
    return($lib.null)
}

function getORKLSources(node) {
    $lib.print("https://orkl.eu/search") | spin
    return($lib.null)
}

function getThreatMinerSources(node) {
    $lib.print("https://www.threatminer.org/") | spin
    return($lib.null)
}

function getIPInfoSources(node) {
    if ($node.form() = 'inet:ipv4') {
        $lib.print("https://ipinfo.io/{value}", value=$node.repr()) | spin
    }
    return($lib.null)
}

function getTwitterSources(node) {
    $lib.print('https://twitter.com/search?q="{value}"&f=live', value=$utils.get_value_or_repr($node)) | spin
    return($lib.null)
}

function getGitHubSources(node) {
    $lib.print('https://github.com/search?q="{value}"', value=$utils.get_value_or_repr($node)) | spin
    return($lib.null)
}

function getCompleteDNSSources(node) {
    $lib.print("https://completedns.com/dns-history/") | spin
    return($lib.null)
}

function getVXUndergroundSources(node) {
    $lib.print("https://www.vx-underground.org/malware.html") | spin
    return($lib.null)
}

function getRiskIQSources(node) {
    $lib.print("https://community.riskiq.com/research?query={value}", value=$utils.get_value_or_repr($node)) | spin
    return($lib.null)
}

function getURLScanSources(node) {
    if ($node.form() = 'inet:fqdn') {
        $lib.print("https://urlscan.io/search/#{value}", value=$node.value()) | spin
    }
    return($lib.null)
}

function getHybridAnalysisSources(node) {
    if ($utils.is_in_list($node.form(), ('hash:md5', 'hash:sha1', 'hash:sha256'))) {
        $lib.print("https://www.hybrid-analysis.com/search?query={value}", value=$node.value()) | spin
    }

    // TODO: Add "https://www.hybrid-analysis.com/string-search", for strings

    return($lib.null)
}

function getVirusShareSources(node) {
    if ($utils.is_in_list($node.form(), ('hash:md5', 'hash:sha1', 'hash:sha256'))) {
        $lib.print("https://virusshare.com") | spin
    }

    return($lib.null)
}

function getAnyRunSources(node) {
    if ($utils.is_in_list($node.form(), ('hash:md5', 'hash:sha1', 'hash:sha256'))) {
        $lib.print("https://app.any.run/submissions") | spin
    }

    return($lib.null)
}

function getCRTSHSources(node) {
    if ($node.form() = 'inet:fqdn') {
        $lib.print("https://crt.sh/?q={value}", value=$node.value()) | spin
    }

    return($lib.null)
}

function getWhoIsSources(node) {
    if ($node.form() = 'inet:ipv4') {
        $lib.print("https://who.is/whois-ip/ip-address/{value}", value=$node.repr()) | spin
    }

    return($lib.null)
}

function getWhoxySources(node) {
    if ($node.form() = 'inet:fqdn') {
        $lib.print("https://www.whoxy.com/{value}", value=$node.value()) | spin
    }

    return($lib.null)
}

function generatePivotingSources(node) {
    if (not $node) {
        return($lib.null)
    }

    // Generate sources only for specific form types:
    $type = $node.form()
    if (not $utils.is_in_list($type, ('inet:fqdn', 'inet:ipv4', 'hash:md5', 'hash:sha1', 'hash:sha256'))) {
        return($lib.null)
    }

    $getGoogleSources($node)
    $getDuckDuckGoSources($node)
    $getAlienaultSources($node)
    $getVirusTotalSources($node)
    $getORKLSources($node)
    $getThreatMinerSources($node)
    $getIPInfoSources($node)
    $getTwitterSources($node)
    $getGitHubSources($node)
    $getCompleteDNSSources($node)
    $getVXUndergroundSources($node)
    $getRiskIQSources($node)
    $getURLScanSources($node)
    $getHybridAnalysisSources($node)
    $getVirusShareSources($node)
    $getAnyRunSources($node)
    $getCRTSHSources($node)
    $getWhoIsSources($node)
    $getWhoxySources($node)
}
